{"version":3,"sources":["components/Navigation/Navigation.tsx","components/HomePage/Homepage.tsx","components/Tabs/Tabs.tsx","components/NotFoundPage/NotFoundPage.tsx","tabs.ts","App.tsx","index.tsx"],"names":["Navigation","className","to","isActive","HomePage","Tabs","tabs","useState","selectedTab","setSelectedtab","tabId","useParams","isCorrectTab","useMemo","selectedPage","find","tab","id","map","onClick","title","content","NotFoundPage","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"2NAGaA,EAAuB,WAClC,OACE,sBAAKC,UAAU,SAAf,UACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAW,qBAAGE,SACD,+BAAiC,sBAHhD,uBAOA,cAAC,IAAD,CACEF,UAAW,qBAAGE,SACD,+BAAiC,sBAC9CD,GAAG,QAHL,sBCbOE,EAAW,WACtB,OACE,oBAAIH,UAAU,QAAd,uB,OCWSI,EAAwB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtC,EAAsCC,mBAAqB,MAA3D,mBAAOC,EAAP,KAAoBC,EAApB,KACQC,EAAUC,cAAVD,MAEFE,EAAeC,mBAAQ,WAC3B,IAAMC,EAAeR,EAAKS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOP,KAEjD,QAAII,IACFL,EAAeK,IAER,KAIR,CAACJ,EAAOF,IAEX,OACE,sCACII,GACA,kDACF,qBAAKX,UAAU,eAAf,SACE,6BACGK,EAAKY,KAAI,SAAAF,GACR,OACE,6BAGE,cAAC,IAAD,CACEf,UAAW,qBAAGE,SAER,+BACA,sBACND,GAAIc,EAAIC,GACRE,QAAS,WACPV,EAAeO,IAPnB,SAUGA,EAAII,SAZFJ,EAAIC,WAoBjBL,GACE,mBAAGX,UAAU,oBAAb,gBACGO,QADH,IACGA,OADH,EACGA,EAAaa,cC1DbC,EAAyB,WACpC,OACE,oBAAIrB,UAAU,QAAd,6BCJSK,EAAO,CAClB,CAAEW,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,gBCsB3BE,EAhBH,kBACV,sBAAKtB,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuB,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,CAAMnB,KAAMA,IAA1C,SACE,cAAC,IAAD,CAAOkB,KAAK,SAASC,QAAS,cAAC,EAAD,CAAMnB,KAAMA,QAE5C,cAAC,IAAD,IAEA,cAAC,IAAD,CAAOkB,KAAK,IAAIC,QAAS,cAAC,EAAD,aChB/BC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.91f90563.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation: React.FC = () => {\n  return (\n    <nav className=\"navbar\">\n      <NavLink\n        to=\"/\"\n        className={({ isActive }) => (\n          isActive ? 'navbar-item is-tab is-active' : 'navbar-item is-tab')}\n      >\n        Home Page\n      </NavLink>\n      <NavLink\n        className={({ isActive }) => (\n          isActive ? 'navbar-item is-tab is-active' : 'navbar-item is-tab')}\n        to=\"/tabs\"\n      >\n        Tabs\n      </NavLink>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">HomePage</h1>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ntype Props = {\n  tabs: Tab[];\n};\n\nexport const Tabs: React.FC<Props> = ({ tabs }) => {\n  const [selectedTab, setSelectedtab] = useState<Tab | null>(null);\n  const { tabId } = useParams();\n\n  const isCorrectTab = useMemo(() => {\n    const selectedPage = tabs.find(tab => tab.id === tabId);\n\n    if (selectedPage) {\n      setSelectedtab(selectedPage);\n\n      return true;\n    }\n\n    return false;\n  }, [tabId, selectedTab]);\n\n  return (\n    <>\n      {!isCorrectTab && (\n        <p>Please select tab</p>)}\n      <div className=\"tabs is-left\">\n        <ul>\n          {tabs.map(tab => {\n            return (\n              <li\n                key={tab.id}\n              >\n                <NavLink\n                  className={({ isActive }) => (\n                    isActive\n                      ? 'navbar-item is-tab is-active'\n                      : 'navbar-item is-tab')}\n                  to={tab.id}\n                  onClick={() => {\n                    setSelectedtab(tab);\n                  }}\n                >\n                  {tab.title}\n                </NavLink>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      {\n        isCorrectTab && (\n          <p className=\"Tabs__tab-content\">\n            {selectedTab?.content}\n          </p>\n        )\n      }\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","export const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n","import './App.scss';\nimport { Routes, Route } from 'react-router-dom';\n\nimport { Navigation } from './components/Navigation/Navigation';\nimport { HomePage } from './components/HomePage/Homepage';\nimport { Tabs } from './components/Tabs/Tabs';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { tabs } from './tabs';\n\nconst App = () => (\n  <div className=\"App\">\n    <Navigation />\n\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/tabs/\" element={<Tabs tabs={tabs} />}>\n        <Route path=\":tabId\" element={<Tabs tabs={tabs} />} />\n      </Route>\n      <Route />\n\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}